"""add_live_game_models

Revision ID: 5a8e5a48d478
Revises: 0395ad976e7e
Create Date: 2025-09-01 20:21:43.408885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5a8e5a48d478'
down_revision: Union[str, Sequence[str], None] = '0395ad976e7e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('live_games',
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('platform_id', sa.String(), nullable=False),
    sa.Column('game_type', sa.String(), nullable=True),
    sa.Column('game_mode', sa.String(), nullable=True),
    sa.Column('map_id', sa.Integer(), nullable=True),
    sa.Column('queue_id', sa.Integer(), nullable=True),
    sa.Column('game_start_time', sa.DateTime(), nullable=True),
    sa.Column('game_length', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('spectator_delay', sa.Integer(), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_table('live_game_participants',
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('summoner_id', sa.String(), nullable=False),
    sa.Column('puuid', sa.String(), nullable=True),
    sa.Column('summoner_name', sa.String(), nullable=True),
    sa.Column('summoner_level', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('champion_id', sa.Integer(), nullable=True),
    sa.Column('spell1_id', sa.Integer(), nullable=True),
    sa.Column('spell2_id', sa.Integer(), nullable=True),
    sa.Column('perk_main_style', sa.Integer(), nullable=True),
    sa.Column('perk_sub_style', sa.Integer(), nullable=True),
    sa.Column('perks', sa.JSON(), nullable=True),
    sa.Column('banned_champion_id', sa.Integer(), nullable=True),
    sa.Column('estimated_rank', sa.String(), nullable=True),
    sa.Column('win_rate_with_champion', sa.Float(), nullable=True),
    sa.Column('average_kda', sa.Float(), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['live_games.game_id'], ),
    sa.PrimaryKeyConstraint('game_id', 'summoner_id')
    )
    op.create_table('live_game_snapshots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('snapshot_time', sa.DateTime(), nullable=True),
    sa.Column('game_time', sa.Integer(), nullable=True),
    sa.Column('blue_team_analysis', sa.JSON(), nullable=True),
    sa.Column('red_team_analysis', sa.JSON(), nullable=True),
    sa.Column('win_probability_blue', sa.Float(), nullable=True),
    sa.Column('win_probability_red', sa.Float(), nullable=True),
    sa.Column('enemy_team_threats', sa.JSON(), nullable=True),
    sa.Column('recommended_strategies', sa.JSON(), nullable=True),
    sa.Column('performance_insights', sa.JSON(), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['live_games.game_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_live_game_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('puuid', sa.String(), nullable=False),
    sa.Column('summoner_id', sa.String(), nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.Column('game_start_detected', sa.DateTime(), nullable=True),
    sa.Column('game_end_detected', sa.DateTime(), nullable=True),
    sa.Column('final_result', sa.String(), nullable=True),
    sa.Column('final_kda', sa.String(), nullable=True),
    sa.Column('final_match_id', sa.String(), nullable=True),
    sa.Column('pre_game_analysis', sa.JSON(), nullable=True),
    sa.Column('post_game_analysis', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['live_games.game_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_live_game_history_puuid'), 'player_live_game_history', ['puuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_player_live_game_history_puuid'), table_name='player_live_game_history')
    op.drop_table('player_live_game_history')
    op.drop_table('live_game_snapshots')
    op.drop_table('live_game_participants')
    op.drop_table('live_games')
    # ### end Alembic commands ###
